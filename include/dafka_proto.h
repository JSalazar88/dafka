/*  =========================================================================
    dafka_proto - Set the content field, transferring ownership from caller

    Copyright (c) the Contributors as noted in the AUTHORS file.
    This file is part of CZMQ, the high-level C binding for 0MQ:
    http://czmq.zeromq.org.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
    =========================================================================
*/

#ifndef DAFKA_PROTO_H_INCLUDED
#define DAFKA_PROTO_H_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
//  @warning Please edit the model at "api/dafka_proto.api" to make changes.
//  @interface
//  This API is a draft, and may change without notice.
#ifdef DAFKA_BUILD_DRAFT_API
#define DAFKA_PROTO_MSG 'm'                 //
#define DAFKA_PROTO_RELIABLE 'r'            //
#define DAFKA_PROTO_ASK 'a'                 //
#define DAFKA_PROTO_ANSWER 'w'              //

//  *** Draft method, for development use, may change without warning ***
//  Create a new empty dafka_proto
DAFKA_EXPORT dafka_proto_t *
    dafka_proto_new (void);

//  *** Draft method, for development use, may change without warning ***
//  Create a new dafka_proto from zpl/zconfig_t *
DAFKA_EXPORT dafka_proto_t *
    dafka_proto_new_zpl (zconfig_t *config);

//  *** Draft method, for development use, may change without warning ***
//  Destroy a dafka_proto instance
DAFKA_EXPORT void
    dafka_proto_destroy (dafka_proto_t **self_p);

//  *** Draft method, for development use, may change without warning ***
//  Create a deep copy of a dafka_proto instance
//  Caller owns return value and must destroy it when done.
DAFKA_EXPORT dafka_proto_t *
    dafka_proto_dup (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Receive a dafka_proto from the socket. Returns 0 if OK, -1 if
//  there was an error. Blocks if there is no message waiting.
DAFKA_EXPORT int
    dafka_proto_recv (dafka_proto_t *self, zsock_t *input);

//  *** Draft method, for development use, may change without warning ***
//  Send the dafka_proto to the output socket, does not destroy it
DAFKA_EXPORT int
    dafka_proto_send (dafka_proto_t *self, zsock_t *output);

//  *** Draft method, for development use, may change without warning ***
//  Print contents of message to stdout
DAFKA_EXPORT void
    dafka_proto_print (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Export class as zconfig_t*. Caller is responsibe for destroying the instance
//  Caller owns return value and must destroy it when done.
DAFKA_EXPORT zconfig_t *
    dafka_proto_zpl (dafka_proto_t *self, zconfig_t *parent);

//  *** Draft method, for development use, may change without warning ***
//  Get the message routing id, as a frame
DAFKA_EXPORT zframe_t *
    dafka_proto_routing_id (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the message routing id from a frame
DAFKA_EXPORT void
    dafka_proto_set_routing_id (dafka_proto_t *self, zframe_t *routing_id);

//  *** Draft method, for development use, may change without warning ***
//  Get the topic of the message for publishing over pub/sub
DAFKA_EXPORT const char *
    dafka_proto_topic (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the topic of the message for publishing over pub/sub
DAFKA_EXPORT void
    dafka_proto_set_topic (dafka_proto_t *self, const char *topic);

//  *** Draft method, for development use, may change without warning ***
//  Get the dafka_proto message id
DAFKA_EXPORT int
    dafka_proto_id (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the dafka_proto message id
DAFKA_EXPORT void
    dafka_proto_set_id (dafka_proto_t *self, int id);

//  *** Draft method, for development use, may change without warning ***
//  Get the dafka_proto message id as printable text
DAFKA_EXPORT const char *
    dafka_proto_command (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Get the address field
DAFKA_EXPORT const char *
    dafka_proto_address (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the address field
DAFKA_EXPORT void
    dafka_proto_set_address (dafka_proto_t *self, const char *address);

//  *** Draft method, for development use, may change without warning ***
//  Get the sequence field
DAFKA_EXPORT uint64_t
    dafka_proto_sequence (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the sequence field
DAFKA_EXPORT void
    dafka_proto_set_sequence (dafka_proto_t *self, uint64_t sequence);

//  *** Draft method, for development use, may change without warning ***
//  Get a copy of the content field
DAFKA_EXPORT zframe_t *
    dafka_proto_content (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Get the content field and transfer ownership to caller
DAFKA_EXPORT zframe_t *
    dafka_proto_get_content (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//
DAFKA_EXPORT void
    dafka_proto_set_content (dafka_proto_t *self, zframe_t **content_p);

//  *** Draft method, for development use, may change without warning ***
//  Get the subject field
DAFKA_EXPORT const char *
    dafka_proto_subject (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the subject field
DAFKA_EXPORT void
    dafka_proto_set_subject (dafka_proto_t *self, const char *subject);

//  *** Draft method, for development use, may change without warning ***
//  Get the begin_offset field
DAFKA_EXPORT uint64_t
    dafka_proto_begin_offset (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the begin_offset field
DAFKA_EXPORT void
    dafka_proto_set_begin_offset (dafka_proto_t *self, uint64_t begin_offset);

//  *** Draft method, for development use, may change without warning ***
//  Get the end_offset field
DAFKA_EXPORT uint64_t
    dafka_proto_end_offset (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the end_offset field
DAFKA_EXPORT void
    dafka_proto_set_end_offset (dafka_proto_t *self, uint64_t end_offset);

//  *** Draft method, for development use, may change without warning ***
//  Get the sender field
DAFKA_EXPORT const char *
    dafka_proto_sender (dafka_proto_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the sender field
DAFKA_EXPORT void
    dafka_proto_set_sender (dafka_proto_t *self, const char *sender);

//  *** Draft method, for development use, may change without warning ***
//  Self test of this class.
DAFKA_EXPORT void
    dafka_proto_test (bool verbose);

#endif // DAFKA_BUILD_DRAFT_API
//  @end

#ifdef __cplusplus
}
#endif

#endif
